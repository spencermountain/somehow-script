{"version":3,"file":"somehow-script.js","sources":["../src/parse.js","../src/index.js"],"sourcesContent":["const tagReg = /\\.[a-z][a-z0-9]+(\\[.*\\])?/gi\nconst isNumber = /^[+-]?[0-9]+([0-9,.%]+)?/\nconst hasComma = /,/\n\nconst special = {\n  true: true,\n  false: false,\n  yes: true,\n  no: false,\n  nope: false,\n  null: null,\n  none: null,\n  nil: null,\n  undefined: null,\n}\n\nconst normalize = function (str) {\n  str = str.toLowerCase()\n  str = str.trim()\n  return str\n}\n\nconst parseBracket = function (str) {\n  let key = null\n  let val = null\n  str = str.trim()\n  str = str.replace(/^\\[/, '')\n  str = str.replace(/\\]$/, '')\n  if (!str) {\n    return {}\n  }\n  let keyVal = str.match(/(.*?)[=:](.*)/)\n  if (keyVal) {\n    key = keyVal[1].trim()\n    val = keyVal[2].trim()\n  } else {\n    //implicit true\n    key = str\n    val = true\n  }\n  key = normalize(key)\n  //cast values\n  if (typeof val === 'string' && special.hasOwnProperty(val.toLowerCase())) {\n    val = special[val.toLowerCase()]\n  } else if (isNumber.test(val)) {\n    val = parseFloat(val) || parseInt(val, 10) || val\n    val = val === '0' ? 0 : val\n  } else if (hasComma.test(val)) {\n    val = val.split(',').map((s) => s.trim())\n  }\n\n  let result = {}\n  result[key] = val\n  return result\n}\n\nconst parseTag = function (str) {\n  str = normalize(str)\n  str = str.replace(/^\\./, '')\n  str = str.replace(/(\\[.*\\])/, '')\n  return str.trim()\n}\n\nconst somehowScript = function (text) {\n  let data = []\n  let errors = []\n  text.replace(tagReg, function (tag = '', bracket = '', offset) {\n    data.push({\n      name: parseTag(tag),\n      props: parseBracket(bracket),\n      text: tag,\n      offset: offset,\n      len: tag.length,\n    })\n  })\n  return {\n    data: data,\n    errors: errors,\n  }\n}\nmodule.exports = somehowScript\n","const parse = require('./parse')\n\nfunction escapeRegExp(string) {\n  string = string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n  return new RegExp(string)\n}\n\n/** parse somehow-script text into json */\nconst smh = function (text, opts) {\n  return parse(text, opts)\n}\n\n/** remove all annotations from input */\nsmh.strip = function (text, opts) {\n  let tags = parse(text, opts).data\n  tags.forEach((o) => {\n    let reg = escapeRegExp(o.text)\n    text = text.replace(reg, '')\n  })\n  return text\n}\n\n/** wrap all annotations in span tags */\nsmh.html = function (text, opts) {\n  let tags = parse(text, opts).data\n  tags.forEach((o) => {\n    let reg = escapeRegExp(o.text)\n    text = text.replace(reg, function (a) {\n      return `<span class=\"smh-tag\">${a}</span>`\n    })\n  })\n  return text\n}\n\nmodule.exports = smh\n"],"names":["tagReg","isNumber","hasComma","special","yes","no","nope","none","nil","undefined","normalize","str","toLowerCase","trim","parseBracket","key","val","replace","keyVal","match","hasOwnProperty","test","parseFloat","parseInt","split","map","s","result","parseTag","somehowScript","text","data","errors","tag","bracket","offset","push","name","props","len","length","escapeRegExp","string","RegExp","smh","opts","parse","strip","tags","forEach","o","reg","html","a"],"mappings":"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"}